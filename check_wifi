#!/bin/bash
##################################################################
# Script checks to see if WiFi has a network IP and if not try to reconnect
# A lock file will be used which prevents the script from running more than one at a time.  
# If lockfile is old, it will be removed.
# Output Messages will be written to /var/log/wifi_check.log
#
# Date: 03.12.2019
#
# Author:    Florian Weiner (sun35friend)
#            sun35friend@gmail.com
#
# Copyright: Copyright (c) 2019 Florian Weiner (sun35friend@gmail.com) 
#            https://github.com/sun30friend/wifi_check
#
##################################################################
# Original Project from TNET Services, Inc
#
# Author:    Kevin Reed (Dweeber) 
#            dweeber.dweebs@gmail.com 
# Project:   Raspberry Pi Stuff
#
# Copyright: Copyright (c) 2012 Kevin Reed kreed@tnet.com 
#            https://github.com/dweeber/WiFi_Check
##################################################################
# Changes to original:   
#
# - cronjob creation with redirecting output to logfile 
# - /sbin/dhcpcd -n $wlan will be used for wifi reconnect
#
# Installation:
#
# o Install where you want to run it from like /scripts 
# o chmod 0755 /scripts/wifi_check 
# o touch /var/log/wifi_check.log 
# o chmod 0640 /var/log/wifi_check.log 
# o chown rood:adm /var/log/wifi_check.log 
# o Add to crontab
#
# Cronjob will run the wifi_check Script every 5 Minutes
# I suggest to only run it with a short timeframe with less than 5 Minutes for troubleshooting
#
# */5 * * * * /scripts/wifi_check > /var/log/wifi_check.log 2>&1
#
##################################################################
# Settings
# Where and what you want to call the Lockfile
lockfile='/var/run/WiFi_Check.pid'
# Which Interface do you want to check/fix
wlan='wlan0'
# Which IP should be pinged for the check
pingip='xxx.xxx.xxx.xxx'
##################################################################
echo
echo "Starting WiFi check for $wlan"
date
echo

# Check to see if there is a lock file
if [ -e $lockfile ]; then
    # A lockfile exists... Lets check to see if it is still valid
    pid=`cat $lockfile`
    if kill -0 &>1 > /dev/null $pid; then
        # Still Valid... lets let it be...
        #echo "Process still running, Lockfile valid"
        exit 1
    else
        # Old Lockfile, Remove it
        #echo "Old lockfile, Removing Lockfile"
        rm $lockfile
    fi
fi
# If we get here, set a lock file using our current PID#
#echo "Setting Lockfile"
echo $$ > $lockfile

# We can perform check
echo "Performing Network check for $wlan"
/bin/ping -c 2 -I $wlan $pingip > /dev/null 2> /dev/null
if [ $? -ge 1 ] ; then
    echo "Network connection down! Attempting reconnection."
    /sbin/dhcpcd -n $wlan
else
    echo "Network is Okay"
fi

echo
echo "Current Setting:"
/sbin/ifconfig $wlan | grep "inet addr:"
echo

# Check is complete, Remove Lock file and exit
#echo "process is complete, removing lockfile"
rm $lockfile
exit 0

##################################################################
# End of Script
##################################################################
